exports.concat = function(input, options) {
	options = options || {
		comments : true
	};
	var fs          = require('fs'),
		path        = require('path'),
		output      = '',
		urlRegex    = /(?:url\([\'\"]*)(.*?)(?:[\'\"]*\))/,
		rootPath    = path.dirname(path.resolve(input)),
		seperator   = '=====================================================',
		lastImport  = function(lineArray) {

			var index      = 0,
				innerIndex = 0;

			lineArray.forEach(function(line) {
				if (line.indexOf('@import') === 0) index = ++innerIndex;
			});

			return index;

		},
		concatenate = function(filename) {

			var currentPath = path.dirname(path.resolve(filename)),
				file        = fs.readFileSync(filename),
				index       = 0,
				importIndex = 0;

			file = ('' + file).split('\n');
			importIndex = lastImport(file);

			file.forEach(function(line) {

				if (importIndex === index && options.comments) {

					output += '/*' + seperator + '\n';
					output += '  contents of: ' + path.relative(rootPath, filename) + '\n';
					output += '  ' + seperator + '*/\n';

				}

				var urlMatch = line.match(urlRegex);

				if (line.indexOf('@import') === 0) {

					var nextFile = urlMatch[1];
					concatenate(rootPath + '/' + nextFile);

				} else if (urlMatch) {

					var imgPath     = urlMatch[1],
						relImgPath  = path.relative(rootPath, currentPath + '/' + imgPath);
					output += line.replace(imgPath, relImgPath) + '\n';

				} else {

					output += line + '\n';

				}

				index++;

			});

		};

	concatenate(input);
	return output;

};
